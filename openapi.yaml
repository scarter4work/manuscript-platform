openapi: 3.0.3
info:
  title: ManuscriptHub Public API
  description: |
    Enterprise-tier REST API for programmatic access to manuscript analysis and publishing features.

    ## Authentication
    All API requests require authentication using an API key:
    ```
    Authorization: Bearer sk_{keyId}_{secret}
    ```

    API keys can be generated from your Enterprise dashboard.

    ## Rate Limits
    - 100 requests per minute
    - 10,000 requests per day

    Rate limit headers are included in all responses:
    - `X-RateLimit-Limit`: Maximum requests allowed
    - `X-RateLimit-Remaining`: Requests remaining
    - `X-RateLimit-Reset`: Unix timestamp when limit resets

    ## Webhooks
    Configure webhooks to receive real-time notifications for events:
    - `manuscript.uploaded`, `analysis.complete`, `assets.complete`, etc.

    Webhook payloads are signed with HMAC-SHA256:
    ```
    X-Webhook-Signature: sha256={hmac}
    ```
  version: 1.0.0
  contact:
    name: ManuscriptHub API Support
    email: api@scarter4workmanuscripthub.com
    url: https://scarter4workmanuscripthub.com/api-docs
  license:
    name: Proprietary
    url: https://scarter4workmanuscripthub.com/terms

servers:
  - url: https://api.scarter4workmanuscripthub.com
    description: Production server
  - url: http://localhost:8787
    description: Local development

security:
  - ApiKeyAuth: []

tags:
  - name: Manuscripts
    description: Upload and manage manuscripts
  - name: Analysis
    description: Trigger and retrieve analysis results
  - name: Webhooks
    description: Configure webhook notifications
  - name: Usage
    description: Monitor API usage and statistics

paths:
  /api/v1/manuscripts:
    post:
      tags:
        - Manuscripts
      summary: Upload a new manuscript
      description: Upload a manuscript file (DOCX, DOC, TXT, or PDF) for analysis
      operationId: uploadManuscript
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - title
              properties:
                file:
                  type: string
                  format: binary
                  description: Manuscript file (DOCX, DOC, TXT, or PDF)
                title:
                  type: string
                  description: Manuscript title
                  example: "The Lost Key"
                author:
                  type: string
                  description: Author name (optional, defaults to account name)
                  example: "Jane Smith"
                genre:
                  type: string
                  description: Genre/category
                  example: "Thriller"
      responses:
        '201':
          description: Manuscript uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManuscriptUploadResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '429':
          $ref: '#/components/responses/TooManyRequests'

    get:
      tags:
        - Manuscripts
      summary: List manuscripts
      description: Get a paginated list of all manuscripts
      operationId: listManuscripts
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            maximum: 100
          description: Maximum number of results to return
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
          description: Number of results to skip
        - name: status
          in: query
          schema:
            type: string
            enum: [uploaded, analyzing, analyzed, failed]
          description: Filter by manuscript status
      responses:
        '200':
          description: List of manuscripts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManuscriptListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /api/v1/manuscripts/{manuscriptId}/analyze:
    post:
      tags:
        - Analysis
      summary: Trigger manuscript analysis
      description: Start analysis job for a manuscript
      operationId: analyzeManuscript
      parameters:
        - $ref: '#/components/parameters/ManuscriptId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                developmental:
                  type: boolean
                  default: true
                  description: Include developmental analysis
                lineEditing:
                  type: boolean
                  default: false
                  description: Include line editing analysis
                copyEditing:
                  type: boolean
                  default: false
                  description: Include copy editing analysis
                generateAssets:
                  type: boolean
                  default: false
                  description: Generate marketing assets after analysis
      responses:
        '202':
          description: Analysis job queued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisStartResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /api/v1/manuscripts/{manuscriptId}/status:
    get:
      tags:
        - Analysis
      summary: Get manuscript status
      description: Check the current status of a manuscript and its analysis
      operationId: getManuscriptStatus
      parameters:
        - $ref: '#/components/parameters/ManuscriptId'
      responses:
        '200':
          description: Manuscript status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManuscriptStatusResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /api/v1/manuscripts/{manuscriptId}/results:
    get:
      tags:
        - Analysis
      summary: Get analysis results
      description: Retrieve complete analysis results for a manuscript
      operationId: getManuscriptResults
      parameters:
        - $ref: '#/components/parameters/ManuscriptId'
      responses:
        '200':
          description: Analysis results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResultsResponse'
        '400':
          description: Analysis not complete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /api/v1/webhooks:
    post:
      tags:
        - Webhooks
      summary: Configure webhook
      description: Create or update a webhook subscription
      operationId: configureWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfig'
      responses:
        '201':
          description: Webhook configured successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /api/v1/usage:
    get:
      tags:
        - Usage
      summary: Get API usage statistics
      description: Retrieve usage statistics for your API key
      operationId: getUsage
      responses:
        '200':
          description: Usage statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageStatsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

components:
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
      description: |
        API key authentication. Format: sk_{keyId}_{secret}

        Example: `Authorization: Bearer sk_1a2b3c4d5e6f7890_a1b2c3d4e5f6789012345678901234567890123456789012`

  parameters:
    ManuscriptId:
      name: manuscriptId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Unique manuscript identifier

  schemas:
    ManuscriptUploadResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            manuscriptId:
              type: string
              format: uuid
            title:
              type: string
            author:
              type: string
            genre:
              type: string
            filename:
              type: string
            fileSize:
              type: integer
              description: File size in bytes
            status:
              type: string
              enum: [uploaded]
            createdAt:
              type: integer
              description: Unix timestamp

    ManuscriptListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            manuscripts:
              type: array
              items:
                $ref: '#/components/schemas/ManuscriptSummary'
            pagination:
              type: object
              properties:
                limit:
                  type: integer
                offset:
                  type: integer
                total:
                  type: integer

    ManuscriptSummary:
      type: object
      properties:
        manuscriptId:
          type: string
          format: uuid
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        status:
          type: string
          enum: [uploaded, analyzing, analyzed, failed]
        wordCount:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer

    AnalysisStartResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            manuscriptId:
              type: string
              format: uuid
            jobId:
              type: string
              format: uuid
            status:
              type: string
              enum: [analyzing]
            statusUrl:
              type: string
              description: URL to check status
            resultsUrl:
              type: string
              description: URL to get results (when complete)
            estimatedTime:
              type: string
              example: "5-10 minutes"

    ManuscriptStatusResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            manuscriptId:
              type: string
              format: uuid
            title:
              type: string
            status:
              type: string
              enum: [uploaded, analyzing, analyzed, failed]
            createdAt:
              type: integer
            updatedAt:
              type: integer
            analysisComplete:
              type: boolean

    AnalysisResultsResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            manuscriptId:
              type: string
            title:
              type: string
            status:
              type: string
            results:
              type: object
              description: Complete analysis results including developmental, line editing, and copy editing
            analyzedAt:
              type: integer

    WebhookConfig:
      type: object
      required:
        - url
        - events
      properties:
        url:
          type: string
          format: uri
          description: Webhook delivery URL
          example: "https://example.com/webhooks/manuscripthub"
        events:
          type: array
          items:
            type: string
          description: Event types to subscribe to
          example: ["manuscript.uploaded", "analysis.complete"]
        secret:
          type: string
          description: Optional secret for HMAC signing (generated if not provided)

    WebhookResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            webhookId:
              type: string
              format: uuid
            url:
              type: string
            events:
              type: array
              items:
                type: string
            secret:
              type: string
              description: Webhook secret (only shown once)
            isActive:
              type: boolean
            createdAt:
              type: integer

    UsageStatsResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            period:
              type: string
              example: "Last 30 days"
            totalRequests:
              type: integer
            avgResponseTime:
              type: number
              description: Average response time in milliseconds
            successfulRequests:
              type: integer
            errorRequests:
              type: integer
            successRate:
              type: string
              example: "98.5%"
            byEndpoint:
              type: array
              items:
                type: object
                properties:
                  endpoint:
                    type: string
                  count:
                    type: integer

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: integer

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              message: "Missing required fields"
              code: 400

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              message: "Invalid API key"
              code: 401

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              message: "Manuscript not found"
              code: 404

    TooManyRequests:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              message: "Rate limit exceeded"
              code: 429
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per period
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Remaining requests
        X-RateLimit-Reset:
          schema:
            type: integer
          description: Unix timestamp when limit resets

    PayloadTooLarge:
      description: File too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              message: "File size exceeds maximum allowed"
              code: 413
